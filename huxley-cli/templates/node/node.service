#===============================================================================
# Node.js - Server Service File
#===============================================================================

[Unit]
Description=Spin Up Node.js
# List any services that must be online before or wait untl after this service is activated.
After=docker.service

[Service]
TimeoutStartSec=0

ExecStartPre=/usr/bin/echo "========================"
ExecStartPre=/usr/bin/echo "  New Service Starting"
ExecStartPre=/usr/bin/echo "========================"

# Display this service's IP addresses.
EnvironmentFile=/etc/environment
ExecStartPre=/usr/bin/echo "Public IP Address: ${COREOS_PUBLIC_IPV4}"
ExecStartPre=/usr/bin/echo "Private IP Address: ${COREOS_PRIVATE_IPV4}"

# Register this service with Sidekick Server.
ExecStartPre=/usr/bin/echo "Registering Service with DNS.  This will take a moment..."
ExecStartPre=/usr/bin/curl -XPOST kick.test-cluster.cluster:2000 -d '\
  "hostname": "node.test-cluster.pandastrike.com",      \
  "ip_address": "${COREOS_PUBLIC_IPV4}",  \
  "port": "3010",  \
  "type": "A"'

# Delete any old containers with this image.
ExecStartPre=-/usr/bin/docker kill node
ExecStartPre=-/usr/bin/docker rm node

# Build the service's Docker container.  We clone the project repo from the hook-server and then
# find the Dockerfile to launch a build.
ExecStartPre=-/usr/bin/bash -c "/usr/bin/rm -rf /home/core/launch/node"
ExecStartPre=/usr/bin/echo "Directory Checked"
ExecStartPre=/usr/bin/bash -c "/usr/bin/git clone git://hook.test-cluster.cluster:2001/repos/donuts.git /home/core/launch/node"
ExecStartPre=/usr/bin/docker build --tag="node_image" /home/core/launch/node/launch/node/.

# Launch the container.
ExecStart=/usr/bin/docker run --name node -p 3010:80 \
  node_image /bin/bash -c \
  "cd node && npm start"

[Install]
WantedBy=multi-user.target
